<div class="full-hero" style="background-image:url(<%= image_path('hero2.jpg') %>)">
  <p class="notice"><%= notice %></p>
  <p class="alert"><%= alert %></p>
  <% if user_signed_in? %>
    <h2>Hello <%= current_user.name %>, welcome to Go Chef!</h2>
  <%end%>
  <div class="hero-content">

    <h1>BEYOND ENTICING</h1>
  </div>
</div>
<div class="index">

  <div class="row-container">
    <%= form_tag '/users/cuisine' do %>
    <div class="row button">
        <%= text_field_tag :cuisine, nil, placeholder: 'search cuisine type', id: "cuisine-search" %>
        <%= submit_tag "search", class: "cuisine btn"%>
      <% end %>
        <% if @message %>
        <%= @message %>
      <% end %>

     <div id="rating">
        <%= form_tag  '/users/filter' do %>
         <%= submit_tag 'Rating', class: "btn" %>
        <% end %>
     </div>

     <div id="caters">
      <%= form_tag  '/users/filter' do %>
       <%= submit_tag 'Caters up to', class: "btn" %>
     <% end %>
     </div>

     <div id="price">
      <%= form_tag  '/users/filter' do %>
       <%= submit_tag 'Price', class: "btn" %>
     <% end %></div>

  </div>
    <% @users.each do |chef|%>
      <div class="row">
        <% if chef.avatar.blank? %>
          <div class="thumbnail" style="background-image:url(<%= image_path('default.png') %>)"></div>
        <% else %>
          <div class="thumbnail" style="background-image:url(<%= image_path(chef.avatar) %>)"></div>
        <% end %>
        <p class="chef"><%= link_to chef.name, "/users/#{chef.id}" %></p>
          <% unless current_user == chef %>
            <%= rating_for chef, 'chef', enable_half: true, half_show: true, disable_after_rate: true %>
          <% end %>
        <p class="price"><%= chef.price_per_head %></p>
        <p class="party"><%= chef.max_party_size %></p>
      </div>
    <% end %>
  </div>

  <div class="map-container">
    <h2>Areas covered by our chefs:</h2>
    <div id="home-map"></div>
  </div>

</div>

  <script type="text/javascript">
    var chefs = <%= raw JSON.generate(@users.map(&:as_json))  %>;
    var mymap = L.map('home-map').setView([51.505, -0.115], 4);
    var layer = new L.StamenTileLayer("terrain");
    mymap.addLayer(layer);
    var addCircle = function (chef){
      circle = L.circle([chef.location_lat, chef.location_lon], {
      color: 'red',
      fillColor: '#f03',
      fillOpacity: 0.5,
      radius: chef.radius*1000,
      }).addTo(mymap);
      circle.bindPopup(`<a href="/users/${chef.id}" >${chef.name}</a>`);
    }
    function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {
      var R = 6371; // Radius of the earth in km
      var dLat = deg2rad(lat2-lat1);  // deg2rad below
      var dLon = deg2rad(lon2-lon1);
      var a =
        Math.sin(dLat/2) * Math.sin(dLat/2) +
        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
        Math.sin(dLon/2) * Math.sin(dLon/2)
        ;
      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
      var d = R * c; // Distance in km
      return d;
    }

    function deg2rad(deg) {
      return deg * (Math.PI/180)
    }
    function onMapClick(event) {
      mymap.eachLayer(function (layer) {
        mymap.removeLayer(layer);
      });
      mymap.addLayer(layer);
      console.log("map clicked");
      chefs.forEach(function(chef){
        if (getDistanceFromLatLonInKm(chef.location_lat, chef.location_lon, event.latlng.lat, event.latlng.lng) < chef.radius){
          addCircle(chef);

        };
      });
    }

    chefs.forEach(function(chef){
      addCircle(chef);
    });



  </script>
